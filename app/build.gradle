plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'kotlin-parcelize'

}

android {
    namespace 'com.andresen.overwatch'
    compileSdk 33

    defaultConfig {
        applicationId "com.andresen.overwatch"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }

    /*java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(11))
    } */

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    packagingOptions {
        resources {
            excludes += [
                    'META-INF/{AL2.0,LGPL2.1}',
                    'META-INF/rxjava.properties',
                    'META-INF/LICENSE.md',
                    'META-INF/LICENSE-notice.md',
                    'META-INF/DEPENDENCIES',
                    'META-INF/AL2.0',
                    'META-INF/LGPL2.1',
                    'META-INF/licenses/ASM'
            ]
            pickFirsts += [
                    'win32-x86-64/attach_hotspot_windows.dll',
                    'win32-x86/attach_hotspot_windows.dll'
            ]
        }
    }

    dynamicFeatures = []
}

dependencies {
    //implementation project(':feature-overview')


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "com.google.maps.android:maps-compose:1.0.0"
    //implementation 'com.google.maps.android:maps-compose:2.8.0' // boom

    implementation "androidx.compose.material:material"
    implementation "androidx.compose.animation:animation"
    implementation "androidx.compose.ui:ui-tooling"

    /* Need this or MapEffect throws exception.
    implementation "androidx.appcompat:appcompat:1.5.1"*/

    // datastore
    implementation "androidx.datastore:datastore:$data_store_version"
    implementation "androidx.datastore:datastore-core:$data_store_version"
    implementation "androidx.datastore:datastore-preferences:$data_store_version"

    // Google Maps
    implementation "com.google.android.gms:play-services-maps:18.0.2"

    /* Google maps
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    // Google maps for compose
    implementation 'com.google.maps.android:maps-compose:2.8.0' */

    // Room components
    implementation "androidx.room:room-runtime:$room_version"

    kapt ("org.xerial:sqlite-jdbc:3.36.0.3")
    implementation("org.robolectric:robolectric:4.7.3")
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation "androidx.room:room-runtime:$room_version"
   // annotationProcessor "androidx.room:room-compiler:$room_version"

    //Room
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // koin
    implementation "io.insert-koin:koin-android:$koin_version"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.40.5"
    kapt "com.google.dagger:hilt-android-compiler:2.40.5"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Retrofit
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
    implementation "io.coil-kt:coil-compose:2.2.2"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // implementation platform('androidx.compose:compose-bom:2023.01.00')

    /* KTX for the Maps SDK for Android
    implementation 'com.google.maps.android:maps-ktx:3.2.1'
    // KTX for the Maps SDK for Android Utility Library
    implementation 'com.google.maps.android:maps-utils-ktx:3.2.1' */
}


